@use "sass:math";
@use "./breakpoints" as *;

$grid-columns: 12;
$grid-gaps: (
	"0": 0,
	"1": 10px,
	"2": 20px,
	"3": 30px,
);

$layout-values: flex-start, flex-end, center, space-between, space-around;

// base layout

.container {
	width: 100%;
	max-width: 1200px;
	margin: 0 auto;
	padding: 0 20px;
}

.row {
	display: flex;
	flex-grow: row wrap;
}

// grid gaps

@each $key, $val in $grid-gaps {
	.gap-#{$key} > * {
		padding: $val;
	}
	.gap-#{$key} {
		margin-left: -$val;
		margin-right: -$val;
	}
}

@each $val in $layout-values {
	.justify-#{$val} {
		justify-content: $val;
	}
}

@include mq(small) {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include mq(medium) {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include mq(large) {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}

@include mq(xxl) {
	@for $i from 1 through $grid-columns {
		.col-#{$i}-sm {
			flex-grow: 0;
			width: math.div($i * 100%, $grid-columns);
		}
	}
}
